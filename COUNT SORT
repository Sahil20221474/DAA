*****************Q-1. Write a program to sort the elements of an array using Count Sort.*************************


#include <iostream>
#include <vector>
#include <algorithm> // For std::max

using namespace std;

void countSort(vector<int>& arr) {
    if (arr.empty()) return;

    // Find the maximum element in the array
    int maxElement = *max_element(arr.begin(), arr.end());
    int minElement = *min_element(arr.begin(), arr.end());

    int range = maxElement - minElement + 1;

    // Create a count array to store the count of each unique object
    vector<int> count(range, 0);

    // Store the count of each element
    for (int num : arr) {
        count[num - minElement]++;
    }

    // Modify the count array by adding the previous counts (cumulative count)
    for (int i = 1; i < range; i++) {
        count[i] += count[i - 1];
    }

    // Output array to store sorted elements
    vector<int> output(arr.size());

    // Build the output array
    for (int i = arr.size() - 1; i >= 0; i--) {
        output[count[arr[i] - minElement] - 1] = arr[i];
        count[arr[i] - minElement]--;
    }

    // Copy the sorted elements back to the original array
    for (int i = 0; i < arr.size(); i++) {
        arr[i] = output[i];
    }
}

void printArray(const vector<int>& arr) {
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

int main() {
    vector<int> arr = {4, 2, 2, 8, 3, 3, 1, 7, 5, 0, 9, 6};

    cout << "Original array: ";
    printArray(arr);

    countSort(arr);

    cout << "Sorted array: ";
    printArray(arr);

    return 0;
}


